name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    paths:
      - 'auth-service/**'
      - 'api-gateway/**'
      - 'catalog-service/**'
      - 'booking-service/**'
      - 'payment-service/**'
      - 'notification-service/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - auth-service
          - api-gateway
          - catalog-service
          - booking-service
          - payment-service
          - notification-service
        region: [australia-southeast1]
        project-id: [sit737-24t1-subhash-c10ae83]
        repo: [auth-repo]
    # Check if the service directory has changed
    if: |
      (github.event.pull_request && (contains(github.event.pull_request.changed_files, 'auth-service/**') && matrix.service == 'auth-service')) ||
      (github.event.pull_request && (contains(github.event.pull_request.changed_files, 'api-gateway/**') && matrix.service == 'api-gateway')) ||
      (github.event.pull_request && (contains(github.event.pull_request.changed_files, 'catalog-service/**') && matrix.service == 'catalog-service')) ||
      (github.event.pull_request && (contains(github.event.pull_request.changed_files, 'booking-service/**') && matrix.service == 'booking-service')) ||
      (github.event.pull_request && (contains(github.event.pull_request.changed_files, 'payment-service/**') && matrix.service == 'payment-service')) ||
      (github.event.pull_request && (contains(github.event.pull_request.changed_files, 'notification-service/**') && matrix.service == 'notification-service')) ||
      (!github.event.pull_request && (contains(github.event.commits[*].modified, 'auth-service/**') && matrix.service == 'auth-service')) ||
      (!github.event.pull_request && (contains(github.event.commits[*].modified, 'api-gateway/**') && matrix.service == 'api-gateway')) ||
      (!github.event.pull_request && (contains(github.event.commits[*].modified, 'catalog-service/**') && matrix.service == 'catalog-service')) ||
      (!github.event.pull_request && (contains(github.event.commits[*].modified, 'booking-service/**') && matrix.service == 'booking-service')) ||
      (!github.event.pull_request && (contains(github.event.commits[*].modified, 'payment-service/**') && matrix.service == 'payment-service')) ||
      (!github.event.pull_request && (contains(github.event.commits[*].modified, 'notification-service/**') && matrix.service == 'notification-service'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          cd ${{ matrix.service }}
          npm install

      - name: Build Docker image
        run: |
          cd ${{ matrix.service }}
          docker build -t ${{ matrix.service }} .

      - name: Tag Docker image
        run: |
          docker tag ${{ matrix.service }} ${{ matrix.region }}-docker.pkg.dev/${{ matrix.project-id }}/${{ matrix.repo }}/${{ matrix.service }}:${{ github.sha }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker to use gcloud as a credential helper
        run: |
          gcloud auth configure-docker ${{ matrix.region }}-docker.pkg.dev || echo "Failed to configure Docker"

      - name: Push Docker image to Google Artifact Registry
        run: |
          docker push ${{ matrix.region }}-docker.pkg.dev/${{ matrix.project-id }}/${{ matrix.repo }}/${{ matrix.service }}:${{ github.sha }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ matrix.project-id }}

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Deploy to GKE
        run: |
          # Delete existing pods
          kubectl delete pods -l app=${{ matrix.service }} --force --grace-period=0 --ignore-not-found=true

          kubectl apply -f ${{ matrix.service }}/${{ matrix.service }}-service.yaml
          kubectl apply -f ${{ matrix.service }}/${{ matrix.service }}-deployment.yaml

          # Set the new image for the deployment
          kubectl set image deployment/${{ matrix.service }} ${{ matrix.service }}-app=${{ matrix.region }}-docker.pkg.dev/${{ matrix.project-id }}/${{ matrix.repo }}/${{ matrix.service }}:${{ github.sha }}
