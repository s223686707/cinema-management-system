name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    paths:
      - 'auth-service/**'
      - 'api-gateway/**'
      - 'catalog-service/**'
      - 'booking-service/**'
      - 'payment-service/**'
      - 'notification-service/**'

jobs:
  determine-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-services: ${{ steps.filter.outputs.changed-services }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get changed files
        id: get_changed_files
        run: |
          echo "CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})" >> $GITHUB_ENV

      - name: Filter changed services
        id: filter
        run: |
          changed_files=$(echo "${{ env.CHANGED_FILES }}" | tr ' ' '\n')
          services=""
          for service in auth-service api-gateway catalog-service booking-service payment-service notification-service; do
            if echo "$changed_files" | grep -q "^$service/"; then
              services="$services,$service"
            fi
          done
          services="${services#,}" # Remove leading comma
          echo "::set-output name=changed-services::$services"

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: determine-changes
    strategy:
      matrix:
        service: [auth-service, api-gateway, catalog-service, booking-service, payment-service, notification-service]
        region: [australia-southeast1]
        project-id: [sit737-24t1-subhash-c10ae83]
        repo: [auth-repo]
    if: contains(needs.determine-changes.outputs.changed-services, matrix.service)

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          cd ${{ matrix.service }}
          npm install

      - name: Build Docker image
        run: |
          cd ${{ matrix.service }}
          docker build -t ${{ matrix.service }} .

      - name: Tag Docker image
        run: |
          docker tag ${{ matrix.service }} ${{ matrix.region }}-docker.pkg.dev/${{ matrix.project-id }}/${{ matrix.repo }}/${{ matrix.service }}:${{ github.sha }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker to use gcloud as a credential helper
        run: |
          gcloud auth configure-docker ${{ matrix.region }}-docker.pkg.dev || echo "Failed to configure Docker"

      - name: Push Docker image to Google Artifact Registry
        run: |
          docker push ${{ matrix.region }}-docker.pkg.dev/${{ matrix.project-id }}/${{ matrix.repo }}/${{ matrix.service }}:${{ github.sha }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ matrix.project-id }}

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Deploy to GKE
        run: |
          # Delete existing pods
          kubectl delete pods -l app=${{ matrix.service }} --force --grace-period=0 --ignore-not-found=true

          kubectl apply -f ${{ matrix.service }}/${{ matrix.service }}-service.yaml
          kubectl apply -f ${{ matrix.service }}/${{ matrix.service }}-deployment.yaml

          # Set the new image for the deployment
          kubectl set image deployment/${{ matrix.service }} ${{ matrix.service }}-app=${{ matrix.region }}-docker.pkg.dev/${{ matrix.project-id }}/${{ matrix.repo }}/${{ matrix.service }}:${{ github.sha }}
